@page "/"
@using ValidatiePOC
@inject IBackendWebApi WebApi
@inject NavigationManager NavigationManager

    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-9"><div class="text-center"><h1>adressen</h1></div></div>
            <div class="col-lg-3">
                <button class="btn btn-primary" @onclick="NieuwAdres">nieuw adres</button>
                <button class="btn btn-primary" @onclick="Cancel">Cancel</button>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-9">
                <div class="card-columns">
                    @if (model != null)
                    {
                        foreach (var adres in model)
                        {
                            if (adres.IsBinnenlands)
                            {
                                <div class="card" @onclick="(() => OpenAdres(adres.Id))">
                                    <div class="card-header bg-primary">adres</div>
                                    <div class="card-body">
                                        <div>@adres.Straat @adres.Huisnummer @adres.HuisnummerToevoeging</div>
                                        <div>@adres.PostCode @adres.Gemeente</div>
                                        <div>@adres.Land</div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="card" @onclick="(() => OpenAdres(adres.Id))">
                                    <div class="card-header bg-warning">buitenlands adres</div>
                                    <div class="card-body">
                                        <div>@adres.AdresRegel1</div>
                                        <div>@adres.PostCode @adres.AdresRegel2</div>
                                        <div>@adres.Land</div>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
            <div class="col-lg-3">
                <div id="CreateAdres" class="row @CreateAdresCollapse">
                    <CascadingValue Value="currentModel">
                        <Adres AdresFinished="AdresFinished"/>
                    </CascadingValue>
                </div>
            </div>
        </div>
    </div>
@code {
    private List<AdresModel> model;
    private bool showCreateAdres;
    private string CreateAdresCollapse => showCreateAdres ? "": "collapse";
    private AdresModel currentModel;

    protected override async Task OnInitializedAsync()
    {
        model = await WebApi.Get<List<AdresModel>>("Adressen");
    }

    private void OpenAdres(int id)
    {
        currentModel = model.Single(a => a.Id == id);
        showCreateAdres = true;
    }

    private void NieuwAdres()
    {
        currentModel = new AdresModel();
        showCreateAdres = true;
    }

    private void Cancel()
    {
        showCreateAdres = false;
    }

    private void AdresFinished(AdresModel newAdres)
    {
        if (newAdres != null) model.Add(newAdres);
        currentModel = new AdresModel();
        showCreateAdres = false;
        StateHasChanged();
    }
}